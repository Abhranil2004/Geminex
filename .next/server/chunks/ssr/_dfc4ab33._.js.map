{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/components/chat/chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/chat/chat.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/chat/chat.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/components/chat/chat.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/chat/chat.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/chat/chat.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/components/layout/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/layout/header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,kEACA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/components/layout/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/layout/header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8CACA","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/components/layout/layout-app.tsx"],"sourcesContent":["import { Header } from \"./header\"\n\nexport default async function LayoutApp({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <div className=\"isolate\">\n      <div className=\"bg-background @container/mainview relative flex h-full w-full\">\n        <main className=\"@container relative h-dvh w-0 flex-shrink flex-grow\">\n          <Header />\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,eAAe,UAAU,EACtC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAK,WAAU;;kCACd,8OAAC,sIAAA,CAAA,SAAM;;;;;oBACN;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/zola-main/zola-main/app/c/%5BchatId%5D/page.tsx"],"sourcesContent":["import { createClient } from \"@/app/lib/supabase/server\"\nimport { Message } from \"ai\"\nimport { redirect } from \"next/navigation\"\nimport Chat from \"../../components/chat/chat\"\nimport LayoutApp from \"../../components/layout/layout-app\"\n\nexport default async function PrivatePage({\n  params,\n}: {\n  params: Promise<{ chatId: string }>\n}) {\n  const { chatId } = await params\n  const supabase = await createClient()\n\n  const { data: userData, error: userError } = await supabase.auth.getUser()\n\n  if (userError || !userData?.user) {\n    redirect(\"/\")\n  }\n\n  const { data: chatData, error: chatError } = await supabase\n    .from(\"chats\")\n    .select(\"id, title, model, system_prompt\")\n    .eq(\"id\", chatId)\n    .eq(\"user_id\", userData.user.id)\n    .single()\n\n  if (chatError || !chatData) {\n    redirect(\"/\")\n  }\n\n  const { data: messages, error: messagesError } = await supabase\n    .from(\"messages\")\n    .select(\"*\")\n    .eq(\"chat_id\", chatId)\n    .order(\"created_at\", { ascending: true })\n\n  const formattedMessages: Message[] =\n    messages?.map((message) => ({\n      id: String(message.id),\n      content: message.content,\n      experimental_attachments: message.attachments,\n      role: message.role,\n    })) || []\n\n  if (messagesError || !messages) {\n    redirect(\"/\")\n  }\n\n  return (\n    <LayoutApp>\n      <Chat\n        initialMessages={formattedMessages}\n        userId={userData.user.id}\n        chatId={chatId}\n        preferredModel={chatData.model || \"\"}\n        systemPrompt={chatData.system_prompt || \"You are a helpful assistant.\"}\n      />\n    </LayoutApp>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;AACA;;;;;;AAEe,eAAe,YAAY,EACxC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,WAAW,MAAM,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAElC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAExE,IAAI,aAAa,CAAC,UAAU,MAAM;QAChC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAChD,IAAI,CAAC,SACL,MAAM,CAAC,mCACP,EAAE,CAAC,MAAM,QACT,EAAE,CAAC,WAAW,SAAS,IAAI,CAAC,EAAE,EAC9B,MAAM;IAET,IAAI,aAAa,CAAC,UAAU;QAC1B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,SACpD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,WAAW,QACd,KAAK,CAAC,cAAc;QAAE,WAAW;IAAK;IAEzC,MAAM,oBACJ,UAAU,IAAI,CAAC,UAAY,CAAC;YAC1B,IAAI,OAAO,QAAQ,EAAE;YACrB,SAAS,QAAQ,OAAO;YACxB,0BAA0B,QAAQ,WAAW;YAC7C,MAAM,QAAQ,IAAI;QACpB,CAAC,MAAM,EAAE;IAEX,IAAI,iBAAiB,CAAC,UAAU;QAC9B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC,6IAAA,CAAA,UAAS;kBACR,cAAA,8OAAC,kIAAA,CAAA,UAAI;YACH,iBAAiB;YACjB,QAAQ,SAAS,IAAI,CAAC,EAAE;YACxB,QAAQ;YACR,gBAAgB,SAAS,KAAK,IAAI;YAClC,cAAc,SAAS,aAAa,IAAI;;;;;;;;;;;AAIhD","debugId":null}}]
}