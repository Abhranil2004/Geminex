{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/Geminex-general/Geminex-general/app/lib/supabase/server-guest.ts"],"sourcesContent":["import type { Database } from \"@/app/types/database.types\"\nimport { createServerClient } from \"@supabase/ssr\"\n\nexport async function createGuestServerClient() {\n  return createServerClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.SUPABASE_SERVICE_ROLE!,\n    {\n      cookies: {\n        getAll: () => [],\n        setAll: () => {},\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;AACA;AAAA;;AAEO,eAAe;IACpB,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,gFAEtB,QAAQ,GAAG,CAAC,qBAAqB,EACjC;QACE,SAAS;YACP,QAAQ,IAAM,EAAE;YAChB,QAAQ,KAAO;QACjB;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/Geminex-general/Geminex-general/app/api/create-guest/route.ts"],"sourcesContent":["import { createGuestServerClient } from \"@/app/lib/supabase/server-guest\"\n\nexport async function POST(request: Request) {\n  try {\n    const supabase = await createGuestServerClient()\n    const { userId } = await request.json()\n    if (!userId) {\n      return new Response(JSON.stringify({ error: \"Missing userId\" }), {\n        status: 400,\n      })\n    }\n    // Check if the user record already exists.\n    let { data: userData } = await supabase\n      .from(\"users\")\n      .select(\"*\")\n      .eq(\"id\", userId)\n      .maybeSingle()\n    if (!userData) {\n      const { data, error } = await supabase\n        .from(\"users\")\n        .insert({\n          id: userId,\n          email: `${userId}@anonymous.example`,\n          anonymous: true,\n          message_count: 0,\n          premium: false,\n          created_at: new Date().toISOString(),\n        })\n        .select(\"*\")\n        .single()\n      if (error || !data) {\n        console.error(\"Error creating guest user:\", error)\n        return new Response(\n          JSON.stringify({\n            error: \"Failed to create guest user\",\n            details: error?.message,\n          }),\n          { status: 500 }\n        )\n      }\n      userData = data\n    }\n    return new Response(JSON.stringify({ user: userData }), { status: 200 })\n  } catch (err: any) {\n    console.error(\"Error in create-guest endpoint:\", err)\n    return new Response(\n      JSON.stringify({ error: err.message || \"Internal server error\" }),\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,2IAAA,CAAA,0BAAuB,AAAD;QAC7C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI;QACrC,IAAI,CAAC,QAAQ;YACX,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAiB,IAAI;gBAC/D,QAAQ;YACV;QACF;QACA,2CAA2C;QAC3C,IAAI,EAAE,MAAM,QAAQ,EAAE,GAAG,MAAM,SAC5B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,QACT,WAAW;QACd,IAAI,CAAC,UAAU;YACb,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC;gBACN,IAAI;gBACJ,OAAO,GAAG,OAAO,kBAAkB,CAAC;gBACpC,WAAW;gBACX,eAAe;gBACf,SAAS;gBACT,YAAY,IAAI,OAAO,WAAW;YACpC,GACC,MAAM,CAAC,KACP,MAAM;YACT,IAAI,SAAS,CAAC,MAAM;gBAClB,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;oBACb,OAAO;oBACP,SAAS,OAAO;gBAClB,IACA;oBAAE,QAAQ;gBAAI;YAElB;YACA,WAAW;QACb;QACA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,MAAM;QAAS,IAAI;YAAE,QAAQ;QAAI;IACxE,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO,IAAI,OAAO,IAAI;QAAwB,IAC/D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}