{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/Geminex-general/Geminex-general/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/Geminex-general/Geminex-general/app/lib/supabase/client.ts"],"sourcesContent":["import { Database } from \"@/app/types/database.types\"\nimport { createBrowserClient } from \"@supabase/ssr\"\n\nexport function createClient() {\n  return createBrowserClient<Database>(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  )\n}\n"],"names":[],"mappings":";;;AAKI;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhra/Downloads/Geminex-general/Geminex-general/app/providers/user-provider.tsx"],"sourcesContent":["// app/providers/user-provider.tsx\n\"use client\"\n\nimport { createClient } from \"@/app/lib/supabase/client\"\nimport { createContext, useContext, useEffect, useState } from \"react\"\nimport { UserProfile } from \"../types/user\"\n\ntype UserContextType = {\n  user: UserProfile | null\n  isLoading: boolean\n  updateUser: (updates: Partial<UserProfile>) => Promise<void>\n  refreshUser: () => Promise<void>\n  signOut: () => Promise<void>\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined)\n\nexport function UserProvider({\n  children,\n  initialUser,\n}: {\n  children: React.ReactNode\n  initialUser: UserProfile | null\n}) {\n  const [user, setUser] = useState<UserProfile | null>(initialUser)\n  const [isLoading, setIsLoading] = useState(false)\n  const supabase = createClient()\n\n  // Refresh user data from the server\n  const refreshUser = async () => {\n    if (!user?.id) return\n\n    setIsLoading(true)\n    try {\n      const { data, error } = await supabase\n        .from(\"users\")\n        .select(\"*\")\n        .eq(\"id\", user.id)\n        .single()\n\n      if (error) throw error\n      if (data)\n        setUser({\n          ...data,\n          profile_image: data.profile_image || \"\",\n          display_name: data.display_name || \"\",\n        })\n    } catch (err) {\n      console.error(\"Failed to refresh user data:\", err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Update user data both in DB and local state\n  const updateUser = async (updates: Partial<UserProfile>) => {\n    if (!user?.id) return\n\n    setIsLoading(true)\n    try {\n      const { error } = await supabase\n        .from(\"users\")\n        .update(updates)\n        .eq(\"id\", user.id)\n\n      if (error) throw error\n\n      // Update local state optimistically\n      setUser((prev) => (prev ? { ...prev, ...updates } : null))\n    } catch (err) {\n      console.error(\"Failed to update user:\", err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Sign out and reset user state\n  const signOut = async () => {\n    setIsLoading(true)\n    try {\n      const { error } = await supabase.auth.signOut()\n      if (error) throw error\n\n      // Reset user state\n      setUser(null)\n    } catch (err) {\n      console.error(\"Failed to sign out:\", err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Set up realtime subscription for user data changes\n  useEffect(() => {\n    if (!user?.id) return\n\n    const channel = supabase\n      .channel(`public:users:id=eq.${user.id}`)\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"UPDATE\",\n          schema: \"public\",\n          table: \"users\",\n          filter: `id=eq.${user.id}`,\n        },\n        (payload) => {\n          setUser((previous) => ({\n            ...previous,\n            ...(payload.new as UserProfile),\n          }))\n        }\n      )\n      .subscribe()\n\n    return () => {\n      supabase.removeChannel(channel)\n    }\n  }, [user?.id, supabase])\n\n  return (\n    <UserContext.Provider\n      value={{ user, isLoading, updateUser, refreshUser, signOut }}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\n// Custom hook to use the user context\nexport function useUser() {\n  const context = useContext(UserContext)\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within a UserProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;;AAGlC;AACA;;;AAHA;;;AAcA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAC3B,QAAQ,EACR,WAAW,EAIZ;;IACC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,eAAY,AAAD;IAE5B,oCAAoC;IACpC,MAAM,cAAc;QAClB,IAAI,CAAC,MAAM,IAAI;QAEf,aAAa;QACb,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM;YAET,IAAI,OAAO,MAAM;YACjB,IAAI,MACF,QAAQ;gBACN,GAAG,IAAI;gBACP,eAAe,KAAK,aAAa,IAAI;gBACrC,cAAc,KAAK,YAAY,IAAI;YACrC;QACJ,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gCAAgC;QAChD,SAAU;YACR,aAAa;QACf;IACF;IAEA,8CAA8C;IAC9C,MAAM,aAAa,OAAO;QACxB,IAAI,CAAC,MAAM,IAAI;QAEf,aAAa;QACb,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,SACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,KAAK,EAAE;YAEnB,IAAI,OAAO,MAAM;YAEjB,oCAAoC;YACpC,QAAQ,CAAC,OAAU,OAAO;oBAAE,GAAG,IAAI;oBAAE,GAAG,OAAO;gBAAC,IAAI;QACtD,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,aAAa;QACf;IACF;IAEA,gCAAgC;IAChC,MAAM,UAAU;QACd,aAAa;QACb,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;YAC7C,IAAI,OAAO,MAAM;YAEjB,mBAAmB;YACnB,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,uBAAuB;QACvC,SAAU;YACR,aAAa;QACf;IACF;IAEA,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,CAAC,MAAM,IAAI;YAEf,MAAM,UAAU,SACb,OAAO,CAAC,CAAC,mBAAmB,EAAE,KAAK,EAAE,EAAE,EACvC,EAAE,CACD,oBACA;gBACE,OAAO;gBACP,QAAQ;gBACR,OAAO;gBACP,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC5B;kDACA,CAAC;oBACC;0DAAQ,CAAC,WAAa,CAAC;gCACrB,GAAG,QAAQ;gCACX,GAAI,QAAQ,GAAG;4BACjB,CAAC;;gBACH;iDAED,SAAS;YAEZ;0CAAO;oBACL,SAAS,aAAa,CAAC;gBACzB;;QACF;iCAAG;QAAC,MAAM;QAAI;KAAS;IAEvB,qBACE,6LAAC,YAAY,QAAQ;QACnB,OAAO;YAAE;YAAM;YAAW;YAAY;YAAa;QAAQ;kBAE1D;;;;;;AAGP;GA9GgB;KAAA;AAiHT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}